#<laconf>
    compiler
    {
    using { ns="System.Linq" }
    using { ns="System.Collections.Generic" }
    using { ns="NFX" }
    using { ns="NFX.Wave" }
    using { ns="NFX.Wave.Templatization" }
    using { ns="Zhaba" }
    using { ns="Zhaba.Data.Forms" }
    base-class-name="Zhaba.Web.Pages.SiteMaster"
    class-declaration="SiteGridMaster<TFilter>"
    class-constraint="where TFilter : ZhabaFilterForm"
    namespace="Zhaba.Web.Pages"
    summary="General ancestor for screens with filtering"
    }
#</laconf>

#[class]
  public virtual TFilter Filter { get; set; }
  public virtual string DataSourceAjaxURI { get; set; }

  protected virtual void renderTitle(){}
  protected virtual void renderTopToolbar(){}
  protected virtual void renderFilterControls(){}
  protected virtual void renderBeforeGrid(){}
  protected virtual void renderAfterGrid(){}


#[override renderSiteBody()]
  <div>
    <div>@[renderTitle();]</div>
    <section id="sectTopToolbar">@[renderTopToolbar();]</section>
    <form id="frmFilter" data-wv-rid="V1" novalidate>
      @[renderFilterControls();]
    </form>
    <section id="sectBeforeGrid">@[renderBeforeGrid();]</section>
    <section id="sectGrid"></section>
    <section id="sectAfterGrid">@[renderAfterGrid();]</section>
  </div>

#[override renderScripts()]
<script>
  //assign your values to override
  var ON_GRID_ROW_SELECTION = function(key, data){
                                $("#sectTopToolbar").find("a[data-grid-link]").each(function(){
                                  $(this).show();
                                });
                              };

  BEFORE_REFILTER = function() {
                      $("#sectTopToolbar").find("a[data-grid-link]").each(function(){
                        $(this).hide();
                      });
                    };

  var ON_CLEAR_FILTERS = function(){};

  var ON_REFILTER_SUCCESS = function(grid) {
                              $("#sectGrid").html(grid);
                              REC.resetModified();

                              $("#sectGrid table")[0].onGridRowSelection = function(table, key, data) {
                                  ON_GRID_ROW_SELECTION(key, data);
                              };
                            };

  var ON_REFILTER_FAIL = function(xhr, status, error) {
                           $("#sectGrid").html("Please revise filter values: " + error);
                         };

  var REC = new WAVE.RecordModel.Record(?[:FormJSON(Filter, null)]);
  var RVIEW = new WAVE.RecordModel.RecordView("V1", REC);

  var tmrSchedFetch = null;

  function scheduleFetch(){
    if (tmrSchedFetch) clearTimeout(tmrSchedFetch);
    tmrSchedFetch = setTimeout(function(){fetchData();}, 3000);
  }

  function unscheduleFetch(indicator){
    if (tmrSchedFetch) clearTimeout(tmrSchedFetch);
    tmrSchedFetch = null;
  }

  REC.eventBind(WAVE.RecordModel.EVT_DATA_CHANGE, function(sender, phase, oldv, newv){
    if (phase==WAVE.RecordModel.EVT_PHASE_AFTER) scheduleFetch();
  });

  var tmrBlur = null;
  $("form#frmFilter").on("keydown", " input[type=text]", function(evt)
  {
      var self = this;
      if (tmrBlur) clearTimeout(tmrBlur);
      tmrBlur = setTimeout(function(){ $(self).blur(); }, 3000);
      unscheduleFetch(false);
  });

  function clearFilters(){
    REC.resetRecord(true);
    RVIEW.buildViews();

    ON_CLEAR_FILTERS();

    fetchData();
  }

  function fetchData() {
    unscheduleFetch(true);

    BEFORE_REFILTER();

    $.post('?[:DataSourceAjaxURI]',
            REC.data(),
            ON_REFILTER_SUCCESS
          )
     .fail(ON_REFILTER_FAIL);
  }

  fetchData();

</script>