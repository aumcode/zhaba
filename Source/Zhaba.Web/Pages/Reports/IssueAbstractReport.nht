#<laconf>
  compiler
  {
    using { ns="System.Linq" }
    using { ns="System.Collections.Generic" }
    using { ns="NFX" }
    using { ns="NFX.DataAccess.CRUD" }
    using { ns="NFX.Wave" }
    using { ns="NFX.Wave.Templatization" }
    using { ns="Zhaba" }
    using { ns="Zhaba.Data.Forms" }
    using { ns="Zhaba.Data.Rows" }
    using { ns="Zhaba.Data.QueryBuilders" }
    base-class-name="Zhaba.Web.Pages.Report"
    class-declaration="IssueAbstractReport<TRow>"
    class-constraint="where TRow : Row"
    namespace="Zhaba.Web.Pages.Reports"
  }
#</laconf>

#[class]
  public IssueAbstractReport(ProjectRow project, IssueRow issue)
  {
    m_Project = project;
    m_Issue = issue;
    areas = ZApp.Data.CRUD.LoadEnumerable(QTask.FindAllAreaByIssue<AreaRow>(m_Issue.Counter));
    components = ZApp.Data.CRUD.LoadEnumerable(QTask.FindAllComponentByIssue<ComponentRow>(m_Issue.Counter));
  }

  protected readonly ProjectRow m_Project;
  protected readonly IssueRow m_Issue;
  protected IEnumerable<AreaRow> areas;
  protected IEnumerable<ComponentRow> components;
  protected IEnumerable<TRow> m_List;
  protected string m_Title;
  
  protected virtual void reportBody() { }

#[override renderBody()]
<div id="DashboardReport">
  <div class="header">
    <h1>@[Target.Write(m_Title);]</h1>
    <h2>Project:  [@[Target.Write(m_Project.Counter);]] @[Target.Write(m_Project.Name);]</h2>
    <h3>Issue: [@[Target.Write(m_Issue.Counter);]] @[Target.Write(m_Issue.Name);] </h3>
  </div>

  <div class="tags-body">
     @[foreach(AreaRow row in areas) {]
    <span class="tag tag-area inline-block">@[Target.Write(row.Name);]</span>
    @[}]
    @[foreach(ComponentRow row in components) {]
    <span class="tag tag-component inline-block">@[Target.Write(row.Name);]</span>
    @[}]
  </div>
 
  <div class="report-body">
    @[reportBody();]
  </div>
</div>



